services:
  panso:
    container_name: panso
    image: ghcr.io/thelovinator1/panso:latest
    restart: always
    networks:
      - redis
      - db
      - web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - /mnt/Fourteen/Docker/Panso/staticfiles:/app/staticfiles
  web:
    container_name: web
    image: lscr.io/linuxserver/nginx:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    expose:
      - 80
      - 443
    volumes:
      - /mnt/Fourteen/Docker/Panso/Nginx:/config
    networks:
      - web
      - tunnel
  tunnel:
    container_name: tunnel
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token $TUNNEL_TOKEN
    restart: always
    networks:
      - tunnel
    environment:
      - TUNNEL_URL=http://web:80
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    user: "1000:1000"
    ports:
      - 6379:6379
    command: /bin/sh -c 'redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes'
    volumes:
      - /mnt/Fourteen/Docker/Panso/Redis:/data
    networks:
      - redis
  postgres:
    container_name: postgres
    image: postgres:16
    user: "1000:1000"
    ports:
      - 5432:5432
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - /mnt/Fourteen/Docker/Panso/Postgres:/var/lib/postgresql/data
    networks:
      - db

networks:
  tunnel:
    driver: bridge
  redis:
    driver: bridge
  db:
    driver: bridge
  web:
    driver: bridge
