[tool.poetry]
name = "panso"
version = "0.1.0"
description = "Panso.se"
authors = ["Joakim Hells√©n <tlovinator@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
python-dotenv = "^1.0.0"
django = "^4.2.7"
django-simple-history = "^3.4.0"
sitemap-parser = { git = "https://github.com/TheLovinator1/sitemap-parser.git" }
typer = { extras = ["all"], version = "^0.9.0" }
sentry-sdk = { extras = ["django"], version = "^1.38.0" }
django-ninja = "^1.0.1"
redis = { extras = ["hiredis"], version = "^5.0.1" }
psycopg = { extras = ["binary"], version = "^3.1.13" }
tenacity = "^8.2.3"
orjson = "^3.9.10"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
pytest = "^7.4.3"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.ruff]
exclude = ["migrations"]
fix = true
unsafe-fixes = true
preview = true
select = ["ALL"]
ignore = [
  "D100",
  "D104",
  "CPY001",
  "ERA001",
  "TD002",
  "TD003",
  "FIX002",
  "COM812",
  "ISC001",
  "DJ001",
]
line-length = 120

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"**/tests/**/*.py" = [
  "S101", # asserts allowed in tests...
  "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
  "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
]
