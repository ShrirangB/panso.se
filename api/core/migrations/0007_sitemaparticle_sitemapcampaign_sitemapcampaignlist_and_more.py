# Generated by Django 4.2.7 on 2023-11-26 01:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0006_webhallensection_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SitemapArticle',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapCampaign',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapCampaignList',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapCategory',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapHome',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapInfoPages',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapManufacturer',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapProduct',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapRoot',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='SitemapSection',
            fields=[
                ('loc', models.URLField(help_text='URL', primary_key=True, serialize=False)),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSitemapSection',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap section',
                'verbose_name_plural': 'historical sitemap sections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapRoot',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap root',
                'verbose_name_plural': 'historical sitemap roots',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapProduct',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap product',
                'verbose_name_plural': 'historical sitemap products',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapManufacturer',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap manufacturer',
                'verbose_name_plural': 'historical sitemap manufacturers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapInfoPages',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap info pages',
                'verbose_name_plural': 'historical sitemap info pagess',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapHome',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap home',
                'verbose_name_plural': 'historical sitemap homes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapCategory',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap category',
                'verbose_name_plural': 'historical sitemap categorys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapCampaignList',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap campaign list',
                'verbose_name_plural': 'historical sitemap campaign lists',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapCampaign',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('priority', models.FloatField(help_text='Priority', null=True)),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap campaign',
                'verbose_name_plural': 'historical sitemap campaigns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitemapArticle',
            fields=[
                ('loc', models.URLField(db_index=True, help_text='URL')),
                ('active', models.BooleanField(help_text='If the URL is still in the sitemap', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Created')),
                ('updated', models.DateTimeField(blank=True, editable=False, help_text='Updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitemap article',
                'verbose_name_plural': 'historical sitemap articles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
